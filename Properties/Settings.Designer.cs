//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace simple_regexer.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "17.12.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Courier New, 9pt")]
        public global::System.Drawing.Font exp_font {
            get {
                return ((global::System.Drawing.Font)(this["exp_font"]));
            }
            set {
                this["exp_font"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Courier New, 9pt")]
        public global::System.Drawing.Font exp_hl_font {
            get {
                return ((global::System.Drawing.Font)(this["exp_hl_font"]));
            }
            set {
                this["exp_hl_font"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Courier New, 9pt")]
        public global::System.Drawing.Font input_font {
            get {
                return ((global::System.Drawing.Font)(this["input_font"]));
            }
            set {
                this["input_font"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Courier New, 9pt")]
        public global::System.Drawing.Font input_hl_font {
            get {
                return ((global::System.Drawing.Font)(this["input_hl_font"]));
            }
            set {
                this["input_hl_font"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("White")]
        public global::System.Drawing.Color exp_backcolor {
            get {
                return ((global::System.Drawing.Color)(this["exp_backcolor"]));
            }
            set {
                this["exp_backcolor"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Black")]
        public global::System.Drawing.Color exp_forecolor {
            get {
                return ((global::System.Drawing.Color)(this["exp_forecolor"]));
            }
            set {
                this["exp_forecolor"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Yellow")]
        public global::System.Drawing.Color exp_hl_backcolor {
            get {
                return ((global::System.Drawing.Color)(this["exp_hl_backcolor"]));
            }
            set {
                this["exp_hl_backcolor"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Black")]
        public global::System.Drawing.Color exp_hl_forecolor {
            get {
                return ((global::System.Drawing.Color)(this["exp_hl_forecolor"]));
            }
            set {
                this["exp_hl_forecolor"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("White")]
        public global::System.Drawing.Color input_backcolor {
            get {
                return ((global::System.Drawing.Color)(this["input_backcolor"]));
            }
            set {
                this["input_backcolor"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Black")]
        public global::System.Drawing.Color input_forecolor {
            get {
                return ((global::System.Drawing.Color)(this["input_forecolor"]));
            }
            set {
                this["input_forecolor"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Yellow")]
        public global::System.Drawing.Color input_hl_backcolor {
            get {
                return ((global::System.Drawing.Color)(this["input_hl_backcolor"]));
            }
            set {
                this["input_hl_backcolor"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Black")]
        public global::System.Drawing.Color input_hl_forecolor {
            get {
                return ((global::System.Drawing.Color)(this["input_hl_forecolor"]));
            }
            set {
                this["input_hl_forecolor"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("1000")]
        public int interval {
            get {
                return ((int)(this["interval"]));
            }
            set {
                this["interval"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool auto_match {
            get {
                return ((bool)(this["auto_match"]));
            }
            set {
                this["auto_match"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0")]
        public int regx_options {
            get {
                return ((int)(this["regx_options"]));
            }
            set {
                this["regx_options"] = value;
            }
        }
    }
}
